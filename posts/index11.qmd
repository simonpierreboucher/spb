---
title: "Stock screener in r"
format: html
editor: visual
categories:
  - Real Estate Listing
  - Web scrapping
  - Web Harvesting
author:
  - name: Simon-Pierre Boucher
    orcid: 0000-0002-3756-3937
    email: simon-pierre.boucher.1@ulaval.ca
    affiliations:
      - name: Université Laval
        address: 2325 Rue de l'Université
        city: Québec
        state: QC 
        postal-code: G1V 0A6
---


``` r
library(httr)
library(jsonlite)
library(shiny)
library(shinythemes)
ui <- fluidPage(
  theme = shinytheme("spacelab"),  # Changer le thème global
  titlePanel("Stock Screener"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("market_cap_more_than", "Market Cap More Than:", min = 1000000000, max = 3000000000000, value = 0, step = 100000000),
      sliderInput("market_cap_lower_than", "Market Cap Lower Than:", min = 1000000000, max = 3000000000000, value = 0, step = 100000000),
      sliderInput("price_more_than", "Price More Than:", min = 0, max = 10000, value = 0, step = 1),
      sliderInput("price_lower_than", "Price Lower Than:", min = 0, max = 10000, value = 0, step = 1),
      sliderInput("beta_more_than", "Beta More Than:", min = 0, max = 5, value = 0, step = 0.1),
      sliderInput("beta_lower_than", "Beta Lower Than:", min = 0, max = 5, value = 0, step = 0.1),
      sliderInput("volume_more_than", "Volume More Than:", min = 0, max = 1000000000, value = 0, step = 10000),
      sliderInput("volume_lower_than", "Volume Lower Than:", min = 0, max = 1000000000, value = 0, step = 10000),
      sliderInput("dividend_more_than", "Dividend More Than:", min = 0, max = 10, value = 0, step = 0.1),
      sliderInput("dividend_lower_than", "Dividend Lower Than:", min = 0, max = 10, value = 0, step = 0.1),
      checkboxInput("is_etf", "Is ETF:", FALSE),
      checkboxInput("is_fund", "Is Fund:", FALSE),
      checkboxInput("is_actively_trading", "Is Actively Trading:", FALSE),
      selectInput("sector", "Sector:", choices = c("Consumer Cyclical", "Energy", "Technology", "Industrials", "Financial Services", "Basic Materials", "Communication Services", "Consumer Defensive", "Healthcare", "Real Estate", "Utilities", "Industrial Goods", "Financial", "Services", "Conglomerates")),
      selectInput("country", "Country:", choices = c("US", "UK", "MX", "BR", "RU", "HK", "CA")),
      selectInput("exchange", "Exchange:", choices = c("nyse", "nasdaq", "amex", "euronext", "tsx", "etf", "mutual_fund")),
      numericInput("limit", "Limit:", value = 10, min = 1, max = 100),
      actionButton("submit", "Submit")
    ),
    mainPanel(
      tableOutput("stock_data")
    )
  )
)

server <- function(input, output, session) {
  
  observeEvent(input$submit, {
    url <- "https://financialmodelingprep.com/api/v3/stock-screener?apikey=80a99c1566222d51909a6964da25976d"
    
    params <- list(
      marketCapMoreThan = input$market_cap_more_than,
      marketCapLowerThan = input$market_cap_lower_than,
      priceMoreThan = input$price_more_than,
      priceLowerThan = input$price_lower_than,
      betaMoreThan = input$beta_more_than,
      betaLowerThan = input$beta_lower_than,
      volumeMoreThan = input$volume_more_than,
      volumeLowerThan = input$volume_lower_than,
      dividendMoreThan = input$dividend_more_than,
      dividendLowerThan = input$dividend_lower_than,
      isEtf = input$is_etf,
      isFund = input$is_fund,
      isActivelyTrading = input$is_actively_trading,
      sector = input$sector,
      country = input$country,
      exchange = input$exchange,
      limit = input$limit
    )
    
    response <- httr::GET(url, query = params)
    content <- httr::content(response, "text", encoding = "UTF-8")
    df <- as.data.frame(jsonlite::fromJSON(content))
    
    output$stock_data <- renderTable({
      df
    })
  })
}

shinyApp(ui = ui, server = server)

```

